"""
sensortest.r2py -- Sensibility Testbed demo code

Yanyan Zhuang, UBC, Canada

Change log:

v 0.0.1, 20140215 1400 YZ
  Using sensor lib code to pull data from a phone 
  
  Examples running this code:

  1. To get all the sensor values:
  startv2 dylink.repy sensortest.r2py 

  2. User provide sensorname + method:
  startv2 dylink.repy sensortest.r2py BatteryFacade batteryGetLevel

  3. User provide sensorname + method + args (let phone vibrate 3 sec):
  startv2 dylink.repy sensortest.r2py AndroidFacade vibrate 3000 

  4. To specify those parameters in code instead of command line, 
  facadelist = ['AndroidFacade']
  method = ['vibrate']
  argslist = [2000] 
  TODO: Currently, both facadelist and method can only have one element.

"""

dy_import_module_symbols("sensorlib")

# parse the input arguments
ap_port = 45678

# get a connection to communicate with sensors
sensor_socket = getconnection(ap_port)

# if user prefers to define sensor/method/arg in code, not command line: 
facadelist = ['SensorFacade']

# start sensing
request_data(facadelist, ['startSensingTimed'], [1, 30], sensor_socket)

# get sensor data
while True:
  sensor_data = request_data(facadelist, ['sensorsReadAccelerometer'], [], sensor_socket)

  # parse returned data and print to screen
  for data in sensor_data:
    parsed = json_parse(str(data))
    log("sensor data: ", parsed['result'], '\n')
    log("error: ", parsed['error'], '\n')
    log('\n')

  sleep(6)

# close communication
sensor_socket.close()